## Problem: Feature Selection for Maximum User Impact

Your product team is planning the next release. There are **N** possible features (numbered 1 to N) that could be developed.

Each feature has:

- a work hour cost (the number of hours required to implement it),
- a user impact score (which may be positive or negative),
- and possibly a dependency feature that must be implemented first.

Some features are core modules (no dependency). Others can only be developed if their dependency (and all ancestors in that chain) has already been implemented.

The team has at most **W** work hours available before the release deadline.

**Goal:**  
Choose a set of features to implement to achieve the highest total user impact score.

---

### Input Format

- The first line contains two integers, `N` and `W`:
  - `N` — number of features
  - `W` — work hours available
- The next `N` lines each contain three integers: `h`, `u`, `d`
  - `h` — work hours required for the feature
  - `u` — user impact score
  - `d` — dependency (0 if no dependency, otherwise the feature number it depends on)

---

### Constraints

- 1 ≤ N ≤ 2000
- 1 ≤ W ≤ 200
- 1 ≤ h ≤ W
- -10^9 ≤ u ≤ 10^9

---

### Output Format

Output a single integer: the maximum total user impact score achievable.

---

### Sample Input 0

```
6 10
3 4 0
2 2 1
5 8 1
4 5 0
2 -1 4
1 3 5
```

### Sample Output 0

```
14
```

---

### Sample Input 1

```
23 8
2 0 0
1 1 1
1 23 0
1 -20 2
1 -21 4
1 12 1
1 0 5
1 1 7
1 13 0
2 3 5
1 21 9
6 -1 11
1 1 5
1 -14 8
7 -1 14
1 12 8
4 19 0
1 -1 17
8 22 18
1 14 14
2 -15 0
2 -1 0
3 21 20
```

### Sample Output 1

```
76
```
