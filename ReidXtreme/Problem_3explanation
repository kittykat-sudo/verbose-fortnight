An artist has discovered an enchanted palette of k magical colors. Each color i contains a non-negative number of brushstrokes.

He begins with a starting palette:

S = [s1, s2, …, sk]

and wants to transform it into a target palette:

T = [t1, t2, …, tk]

The palette carries an enchantment. For any index i where 2 ≤ i ≤ k − 1, the artist may cast a spell:

c[i] = (c[i-1] + c[i+1]) - c[i]

The spell can be cast any number of times, in any order. Your task is to determine if it is possible to transform S into T exactly, without leaving any paint unused.

You will be given multiple test cases. For each case, print "YES" if the transformation is possible, otherwise "NO".

Input Format

The first line contains an integer q — the number of test cases.

Each test case consists of three lines:

The first line contains an integer k.

The second line contains k integers s1, s2, …, sk.

The third line contains k integers t1, t2, …, tk.

Constraints

1 ≤ q ≤ 10

2 ≤ k ≤ 10^4

1 ≤ si ≤ 10^6

1 ≤ ti ≤ 10^6

Output Format

For each test case, print "YES" or "NO" on a separate line.

Sample Input 0

2
3
1 3 6
1 4 6
4
2 5 8 10
2 6 8 10
Sample Output 0

YES
NO
Explanation 0

Test Case 1: S = [1, 3, 6] T = [1, 4, 6] k = 3 → middle index i = 2

Cast spell on i=2: c[2] = (c[1] + c[3]) - c[2] c[2] = (1 + 6) - 3 = 4

Resulting palette: [1, 4, 6] → matches T Output: YES

Test Case 2: S = [2, 5, 8, 10] T = [2, 6, 8, 10] k = 4 → middle indices i = 2, 3

Initial palette: [2, 5, 8, 10]

Cast spell on i=2: c[2] = (c[1] + c[3]) - c[2] = (2 + 8) - 5 = 5 Palette now: [2, 5, 5, 10]

Cast spell on i=3: c[3] = (c[2] + c[4]) - c[3] = (5 + 10) - 5 = 10 Palette now: [2, 5, 5, 10]

Cannot match the multiset by any sequence of spells. Output: NO
